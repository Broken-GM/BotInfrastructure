AWSTemplateFormatVersion: 2010-09-09

Parameters:
  VpcCidrBlock:
    Type: String
  PublicSubnetCidrBlock:
    Type: String
  PrivateSubnetCidrBlock:
    Type: String
  SshIpCidr:
    Type: String

Resources:
  ############################
  # VPC Infrastructure
  ############################

  BotVpc:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCidrBlock
      EnableDnsSupport: true
      EnableDnsHostnames: true
      InstanceTenancy: default

  BotPublicSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref BotVpc
      CidrBlock: !Ref PublicSubnetCidrBlock
      MapPublicIpOnLaunch: false
      AvailabilityZone: !Select
        - 0
        - Fn::GetAZs: !Ref 'AWS::Region'

  BotPrivateSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref BotVpc
      CidrBlock: !Ref PrivateSubnetCidrBlock
      MapPublicIpOnLaunch: false
      AvailabilityZone: !Select
        - 0
        - Fn::GetAZs: !Ref 'AWS::Region'

  BotInternetGateway:
    Type: AWS::EC2::InternetGateway

  BotVpcAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref BotInternetGateway
      VpcId: !Ref BotVpc

  BotVpcPublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref BotVpc

  BotPublicRoute:
    Type: AWS::EC2::Route
    DependsOn: BotVpcAttachment
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      RouteTableId: !Ref BotVpcPublicRouteTable
      GatewayId: !Ref BotInternetGateway    

  BotSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref BotVpcPublicRouteTable
      SubnetId: !Ref BotPublicSubnet

  BotElasticIp:
    Type: AWS::EC2::EIP

  BotNatGateway:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt BotElasticIp.AllocationId
      SubnetId: !Ref BotPublicSubnet

  BotVpcPrivateRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref BotVpc

  BotPrivateRoute:
    Type: AWS::EC2::Route
    DependsOn: BotVpcAttachment
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      RouteTableId: !Ref BotVpcPrivateRouteTable
      NatGatewayId: !Ref BotNatGateway      

  BotPrivateSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref BotVpcPrivateRouteTable
      SubnetId: !Ref BotPrivateSubnet
  
  ############################
  # EC2
  ############################

  BotNetworkInterface:
    Type: AWS::EC2::NetworkInterface
    Properties:
      SourceDestCheck: 'false'
      GroupSet:
        - !Ref BotInstanceSecurityGroup
      SubnetId: !Ref BotPrivateSubnet
      PrivateIpAddress: 10.0.0.10

  BotInstance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: t4g.nano
      KeyName: EC2 Keys
      ImageId: ami-0c79a55dda52434da
      NetworkInterfaces:
        - NetworkInterfaceId: !Ref BotNetworkInterface
          DeviceIndex: 0

  BotInstanceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable SSH access via port 22
      VpcId: !Ref BotVpc
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: !Ref SshIpCidr
        

Outputs:
  IpAddress:
    Description: Ip Address
    Value: !Ref BotElasticIp

  SecurityGroupId:
    Description: SecurityGroupId for Bot VPC
    Value: !GetAtt BotVpc.DefaultSecurityGroup

  SubnetId:
    Description: SubnetId for Bot VPC
    Value: !Ref BotPrivateSubnet